!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r():"function"==typeof define&&define.amd?define(r):r()}(0,function(){"use strict";function e(e){return"string"==typeof e}function r(r){if(!e(r))throw new TypeError("Invalid hex code string provided");var n=r.replace(/#/g,""),o=/^([a-f0-9])\1([a-f0-9])\2([a-f0-9])\3$/gi,i=o.exec(n),f=n,a=void 0,u=void 0,d=void 0;if(i){var c=t(i,4);f=c[0],a=c[1],u=c[2],d=c[3],f=(a+u+d).toLowerCase()}return"#"+f}Object.defineProperty(exports,"__esModule",{value:!0});var t=function(){function e(e,r){var t=[],n=!0,o=!1,i=void 0;try{for(var f,a=e[Symbol.iterator]();!(n=(f=a.next()).done)&&(t.push(f.value),!r||t.length!==r);n=!0);}catch(e){o=!0,i=e}finally{try{!n&&a.return&&a.return()}finally{if(o)throw i}}return t}return function(r,t){if(Array.isArray(r))return r;if(Symbol.iterator in Object(r))return e(r,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();exports.isString=e,exports.default=r});